apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "argocd-mcp-server.fullname" . }}
  labels:
    {{- include "argocd-mcp-server.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: argocd-mcp-server
  template:
    metadata:
      labels:
        app: argocd-mcp-server
    spec:
      serviceAccountName: {{ include "argocd-mcp-server.fullname" . }}-sa
      containers:
        - name: mcp-server
          image: "tiangolo/uvicorn-gunicorn-fastapi:python3.11"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: ARGOCD_BASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "argocd-mcp-server.fullname" . }}-env
                  key: ARGOCD_BASE_URL
            - name: ARGOCD_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "argocd-mcp-server.fullname" . }}-env
                  key: ARGOCD_USERNAME
            - name: ARGOCD_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "argocd-mcp-server.fullname" . }}-env
                  key: ARGOCD_PASSWORD
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: server-code
              mountPath: /app/server.py
              subPath: server.py
            - name: tools-json
              mountPath: /app/tools.json
              subPath: tools.json
            - name: env-file
              mountPath: /app/.env
              subPath: .env
      volumes:
        - name: env-file
          secret:
            secretName: {{ include "argocd-mcp-server.fullname" . }}-env
        - name: server-code
          configMap:
            name: {{ include "argocd-mcp-server.fullname" . }}-server
        - name: tools-json
          configMap:
            name: {{ include "argocd-mcp-server.fullname" . }}-tools
